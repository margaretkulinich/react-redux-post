{"version":3,"sources":["store/actions.js","PostHeader/PostHeader.js","PostControllers/PostControllers.js","PostContent/PostContent.js","Post/Post.js","App.js","reportWebVitals.js","store/reducer.js","store/index.js","index.js"],"names":["CREATE_POST_ACTION_NAME","currentDate","dateObj","Date","month","getUTCMonth","day","getUTCDate","getUTCFullYear","PostHeader","imageAuthor","author","userName","date","className","src","class","PostControllers","likes","comments","reposts","icon","faCommentAlt","faRetweet","faHeart","faUpload","PostContent","props","text","img","Post","App","connect","state","posts","authors","dispatch","useState","contentText","setContentText","contentImgSrc","setContentImgSrc","setAuthor","type","placeholder","value","onChange","e","target","map","onClick","postContent","postContentImgSrc","postAuthor","payload","post","index","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","newPosts","slice","unshift","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbc7b43f.chunk.js","sourcesContent":["export const CREATE_POST_ACTION_NAME = \"CREATE_POST\";\r\n\r\nconst currentDate = () => {\r\n    const dateObj = new Date();\r\n    const month = dateObj.getUTCMonth() + 1; \r\n    const day = dateObj.getUTCDate();\r\n    const year = dateObj.getUTCFullYear();\r\n\r\n    return year + \"/\" + month + \"/\" + day;\r\n}\r\n\r\nexport function createPost(postContent, postContentImgSrc, postAuthor) {\r\n    return {\r\n        type: CREATE_POST_ACTION_NAME,\r\n        payload: {\r\n            author: postAuthor,\r\n            imageAuthor: \"https://dontfear.ru/wp-content/uploads/2014/07/4a0bf547e4d045c0f0557d33cd839f0b-300x300.png\",\r\n            userName: `@${postAuthor}`,\r\n            date: currentDate(),\r\n            text: postContent,\r\n            img: postContentImgSrc,\r\n            likes: 0,\r\n            comments: 0,\r\n            reposts: 0,\r\n        }\r\n    };\r\n};\r\n\r\n\r\n \r\n","import React from \"react\";\r\nimport \"./PostHeader.css\";\r\n\r\nexport function PostHeader({ imageAuthor, author, userName, date }) {\r\n    return (\r\n        <div className=\"post-header\">\r\n            <div className=\"post-avatar\">\r\n                <img src={imageAuthor}/>\r\n            </div>\r\n            <h3>{author}\r\n                <img className=\"verified-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Twitter_Verified_Badge.svg/800px-Twitter_Verified_Badge.svg.png\" />\r\n                <span class=\"post-header-userName-date\">{userName} {date}</span>\r\n            </h3>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentAlt, faHeart,  } from '@fortawesome/free-regular-svg-icons';\r\nimport { faRetweet, faUpload } from '@fortawesome/free-solid-svg-icons';\r\nimport \"./PostControllers.css\";\r\n\r\nexport function PostControllers({ likes, comments, reposts}) {\r\n    return (\r\n        <div className=\"post-controllers\">\r\n            <button className=\"controller\">\r\n                <FontAwesomeIcon icon={faCommentAlt} />\r\n                <span className=\"controller-text\">{comments}</span>\r\n            </button>\r\n            \r\n            <button className=\"controller\">\r\n                <FontAwesomeIcon icon={faRetweet} />\r\n                <span className=\"controller-text\">{reposts}</span>\r\n            </button>\r\n\r\n            <button className=\"controller\">\r\n                <FontAwesomeIcon icon={faHeart} />\r\n                <span className=\"controller-text\">{likes}</span>\r\n            </button>\r\n    \r\n            <button className=\"controller\">\r\n                <FontAwesomeIcon icon={faUpload} />\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./PostContent.css\"\r\n\r\nexport function PostContent(props) {\r\n    const text = props.text;\r\n    const img = props.img;\r\n\r\n    return (\r\n        <div className=\"post-content\">\r\n            {text ? <span className=\"post-content-text\">{text}</span> : null}\r\n            {img ? <img src={img}/> : null}\r\n        </div>\r\n    )       \r\n}","import React from \"react\";\r\nimport { PostHeader } from \"../PostHeader/PostHeader\";\r\nimport \"./Post.css\";\r\nimport { PostControllers } from \"../PostControllers/PostControllers\";\r\nimport { PostContent } from \"../PostContent/PostContent\";\r\n\r\n\r\nexport default function Post({ imageAuthor, author, userName, date, text, img, likes, comments, reposts }) {\r\n    return (\r\n        <div className=\"post\">\r\n            <PostHeader\r\n                imageAuthor={imageAuthor} \r\n                author={author}\r\n                userName={userName}\r\n                date={date}\r\n            />\r\n            <PostContent\r\n                text={text}\r\n                img={img}\r\n            />\r\n            <PostControllers\r\n                likes={likes}\r\n                comments={comments}\r\n                reposts={reposts}\r\n            />\r\n        </div>\r\n    )\r\n}","import { connect } from \"react-redux\";\nimport { createPost } from \"./store/actions\";\nimport { useState } from \"react\";\nimport Post from \"./Post/Post\";\nimport './App.css';\n\nfunction AppConnected(props) {\n  const { posts, authors, dispatch } = props;\n  const [contentText, setContentText] = useState('');\n  const [contentImgSrc, setContentImgSrc] = useState('');\n  const [author, setAuthor] = useState('');\n\n  const addPost = () => {\n    dispatch(createPost(contentText, contentImgSrc, author));\n  };\n\n  const handleInputContent = (e) => {\n    setContentText(e.target.value);\n  }\n\n  const handleInputImgSrc = (e) => {\n    setContentImgSrc(e.target.value);\n  }\n\n  const handleSelectAuthor = (e) => {\n    setAuthor(e.target.value);\n  }\n\n\n  return (\n    <div className=\"feed-container\">\n      <div className=\"form\">\n        <input className=\"input-form\" type=\"text\" placeholder=\"enter text\" value={contentText} onChange={handleInputContent}></input>\n        <input className=\"input-form\" type=\"text\" placeholder=\"enter imagesrc\" value={contentImgSrc} onChange={handleInputImgSrc}></input>\n        <select className=\"input-form\" value={author} onChange={handleSelectAuthor}>\n          {authors.map(author => <option value={author}>{author}</option>)}\n        </select>\n        <button className = \"button-add-post\" onClick={addPost}>Add Post</button>\n      </div>\n      <ul className=\"feed\">\n        {posts.map((post, index) => <Post id={index} {...post} />)}\n      </ul>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  posts: state.posts,\n  authors: state.authors,\n});\n\nconst App = connect(mapStateToProps)(AppConnected);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CREATE_POST_ACTION_NAME } from \"./actions\";\r\n\r\nconst initialState = {\r\n    posts: [{  \r\n        author: \"Marharyta Kulinich\",\r\n        imageAuthor: \"https://lh3.googleusercontent.com/ogw/ADea4I4lekz41FcTZGAr_Jq3x2rAzRRjn-JpiiJbZPhMnQ=s83-c-mo\",\r\n        userName: \"@margokulinich\",\r\n        date: \"2021/10/10\",\r\n        text: \"I try to learn React.js\",\r\n        img: \"https://miro.medium.com/max/2048/1*h5UGPzaL1E4dIy_JWDrsAw.png\",\r\n        likes: \"17\",\r\n        comments: '5',\r\n        reposts: '1'\r\n    }, {\r\n        author: \"David Lutsenko\",\r\n        imageAuthor: \"https://dontfear.ru/wp-content/uploads/2014/07/4a0bf547e4d045c0f0557d33cd839f0b-300x300.png\",\r\n        userName: \"@user0012\",\r\n        date: \"2021/09/01\",\r\n        text: \"I try to learn React Router\",\r\n        img: \"https://user-images.githubusercontent.com/47307889/116921331-826bbe80-ac5c-11eb-9f48-d8fbde144b04.png\",\r\n        likes: \"22\",\r\n        comments: '2',\r\n        reposts: '3'\r\n    }\r\n    ],\r\n    authors: ['Vanya Belyaev', 'Roman Nekiy', 'Alina Ruda', 'Lina Kalush'],\r\n};\r\n\r\nexport function rootReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_POST_ACTION_NAME: {\r\n            const newPosts = state.posts.slice();\r\n\r\n            newPosts.unshift(action.payload);\r\n\r\n            return {\r\n                ...state,\r\n                posts: newPosts\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducer\";\r\n\r\nexport const store = createStore(rootReducer);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}